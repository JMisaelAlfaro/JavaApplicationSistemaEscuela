
package Frames;

import Clases.Conectar;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author misa_
 */
public class Informacion_Calificaciones extends javax.swing.JFrame {

    /**
     * Creates new form Informacion_Calificaciones
     */
    
    int idAlumno=0;
    int idCalifa=0;
    String nombre_alumno="";
    
    public Informacion_Calificaciones() {
        initComponents();
        
        //cerrar();
        
        TextPrompt tarea= new TextPrompt("Actualiza Tarea", txtTarea);
        TextPrompt calificacion= new TextPrompt("Actualiza Calificacion", txtCalificacion);
        
        this.setLocationRelativeTo(null);
        
        txtNombre.setEditable(false);
        
        idCalifa = Informacion_Alumnos.idCalificacion;
        idAlumno = Gestion_Alumnos.idAlumno;
        
        try {
            var ps = cn.prepareStatement("SELECT nombre FROM alumnos WHERE id_alumno='"+idAlumno+"'");
            ResultSet rs = ps.executeQuery();
            
            if(rs.next()){
                
                nombre_alumno = rs.getString("nombre");
              }
        } catch (SQLException e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Error al consultar nombre Alumno");
        }
        
        ////////////////////////////////////////////////
        
        try {
            
            var ps = cn.prepareStatement("SELECT tarea,calificacion FROM notas WHERE id_nota='"+idCalifa+"'");
            ResultSet rs = ps.executeQuery();
            
            if(rs.next()){
                
                txtTarea.setText(rs.getString("tarea"));
                txtCalificacion.setText(rs.getString("calificacion"));
            }
            
        } catch (SQLException e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Error al consultar la informacion de calificaciones");
        }
        
        txtNombre.setText(nombre_alumno);
        
        //////////////////////////////////////////////////////
        
        DefaultTableModel modelo = new DefaultTableModel();
        
        modelo.addColumn("Id nota");
        modelo.addColumn("Tarea");
        modelo.addColumn("Calificacion");
        
        tabla_informacion_calificacion.setModel(modelo);
        
        String sql = "SELECT id_nota,tarea,calificacion FROM notas WHERE id_alumno_nota='"+idAlumno+"'";
        
        String datos[] = new String[3];
        
        Statement st;
        
        try {
            
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            while(rs.next()){
                
                datos[0] = rs.getString("id_nota");
                datos[1] = rs.getString("tarea");
                datos[2] = rs.getString("calificacion");
                
                modelo.addRow(datos);
                
            }
            
            tabla_informacion_calificacion.setModel(modelo);
            
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al llenar la Tabla de Calificaciones");
        }
        
        //cerrar el frame
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTarea = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCalificacion = new javax.swing.JTextField();
        btnActualizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_informacion_calificacion = new javax.swing.JTable();
        btnVolver2 = new javax.swing.JButton();

        jMenuItem1.setText("jMenuItem1");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jLabel1.setText("INFORMACION DE CALIFICACIONES");

        jLabel2.setText("Alumno:");

        jLabel3.setText("Tarea:");

        jLabel4.setText("Calificacion:");

        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/update.png"))); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        tabla_informacion_calificacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabla_informacion_calificacion.setComponentPopupMenu(jPopupMenu1);
        jScrollPane1.setViewportView(tabla_informacion_calificacion);

        btnVolver2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/volver.png"))); // NOI18N
        btnVolver2.setText("Volver");
        btnVolver2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolver2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addComponent(txtCalificacion, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addComponent(txtTarea, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombre)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnVolver2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(344, 344, 344))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(104, 104, 104))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtTarea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(txtCalificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVolver2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed

        try {
            if(txtTarea.getText().isEmpty()){
                JOptionPane.showMessageDialog(null,"No puedes dejar el campo Tarea vacio");
            }

            else if(txtCalificacion.getText().isEmpty()){

                JOptionPane.showMessageDialog(null, "No puede dejar el campo Calificacion vacio");
            }

            else  {
                
                var ps = cn.prepareStatement("UPDATE notas SET tarea='"+txtTarea.getText()+"',calificacion='"+txtCalificacion.getText()+"' WHERE id_nota='"+idCalifa+"'");
                
                int respuesta = ps.executeUpdate();
                
                if(respuesta>0){
                     JOptionPane.showMessageDialog(null, "Datos Actulizados");
                    
                }
             
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al actualizar datos de Calificaciones");
        }

    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnVolver2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolver2ActionPerformed

        Informacion_Alumnos infoAlumno = new Informacion_Alumnos();
        infoAlumno.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnVolver2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
    
        try {
            
            var ps = cn.prepareStatement("DELETE FROM notas WHERE id_nota='"+idCalifa+"'");
            int respuesta = ps.executeUpdate();
            
            if(respuesta>0){
                
                JOptionPane.showMessageDialog(null, "Datos Borrados");
            }
            else{
                JOptionPane.showMessageDialog(null, "No ha seleccionado fila");
            }
        } catch (Exception e) {
        }
        
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Informacion_Calificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Informacion_Calificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Informacion_Calificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Informacion_Calificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Informacion_Calificaciones().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnVolver2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla_informacion_calificacion;
    private javax.swing.JTextField txtCalificacion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTarea;
    // End of variables declaration//GEN-END:variables

Conectar con = new Conectar();
    Connection cn = con.getConexion();

}
